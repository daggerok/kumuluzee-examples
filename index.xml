<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc maxdepth="4"?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>kumuluzee-examples (0.0.1)</title>
<date>2019-05-04 00:42:53 UTC</date>
<author>
<personname>
<firstname>Maksim</firstname>
<surname>Kostromin</surname>
</personname>
<email>com.github.daggerok@gmail.com</email>
</author>
<authorinitials>MK</authorinitials>
<revhistory>
<revision>
<revnumber>0.0.1</revnumber>
<date>2019-05-04 00:42:53 UTC</date>
<authorinitials>MK</authorinitials>
</revision>
</revhistory>
</info>
<chapter xml:id="introduction">
<title>Introduction</title>
<simpara>Read <link xl:href="https://daggerok.github.io/kumuluzee-examples">project reference documentation</link></simpara>
<formalpara>
<title>build</title>
<para>
<programlisting language="bash" linenumbering="unnumbered">./mvnw</programlisting>
</para>
</formalpara>
<formalpara>
<title>docs</title>
<para>
<programlisting language="bash" linenumbering="unnumbered">./gradlew documentation -Dorg.gradle.jvmargs='-Xmx1g'</programlisting>
</para>
</formalpara>
<simpara>TODO (Gradle):</simpara>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://github.com/kumuluz/kumuluzee-samples/issues/14">KumuluzEE with Gradle 1</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://gist.github.com/ArtificialPB/fa629f321fd3f9d74cc77078da4b4bab">KumuluzEE with Gradle 2</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://github.com/ArtificialPB/kumuluzee-jax-rs-gradle">KumuluzEE with Gradle 3</link></simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter xml:id="implementation">
<title>Implementation</title>
<section xml:id="kumuluzee-using-gradle-kotlin-dsl">
<title>KumuluzEE using Gradle (Kotlin DSL)</title>
<programlisting language="kotlin" linenumbering="unnumbered">val kumuluzeeLoader by configurations.creating {
  extendsFrom(configurations["runtime"])
  setTransitive(false)
}
dependencies {
  kumuluzeeLoader("com.kumuluz.ee:kumuluzee-loader:$kumuluzeeVersion")
  // ...
}

tasks {
  register("kumuluzLoader", Copy::class.java) {
    group = "KumuluzEE"
    description = "Repackage KumuluzEE loader"

    from(zipTree(configurations["kumuluzeeLoader"].singleFile).matching { include("**/*.class") })
    into("$buildDir/classes/java/main")
    outputs.upToDateWhen { false }

    val parent = "$buildDir/classes/java/main/META-INF/kumuluzee"
    file(parent).mkdirs()
    file("$parent/boot-loader.properties")
        .writeText("main-class=com.kumuluz.ee.EeApplication\n", UTF_8)

    shouldRunAfter("classes")
    dependsOn("classes")
  }

  register("kumuluzJar", Jar::class.java) {
    group = "KumuluzEE"
    description = "Build KumuluzEE uber (fat) jar"

    archiveClassifier.set("all")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
      attributes("Main-Class" to "com.kumuluz.ee.loader.EeBootLoader")
    }

    // deps
    val libs = configurations.runtimeClasspath
    //libs.get().forEach { println("add dependency: ${it.name}") }
    from(libs.get()) {
      into("lib")
    }

    // app
    val sourcesMain = sourceSets.main
    //sourcesMain.get().allSource.forEach { println("add app: ${it.name}") }
    from(sourcesMain.get().output)
    //from(configurations["kumuluzeeLoader"])

    shouldRunAfter("kumuluzLoader")
    dependsOn("kumuluzLoader")
    finalizedBy("build")
  }
}

defaultTasks("kumuluzJar")</programlisting>
</section>
</chapter>
<chapter xml:id="links">
<title>Links</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://github.com/com.github.daggerok/kumuluzee-examples">GitHub repo</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://com.github.daggerok.github.io/kumuluzee-examples">GitHub pages</link></simpara>
</listitem>
</itemizedlist>
</chapter>
</book>